---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
  - name: Create EC2 instances
    ec2:
      key_name: "{{ aws_key_name }}"
      instance_type: "{{ aws_instance_type }}"
      image: "{{ aws_image }}"
      region: "{{ aws_region }}"
      group: "{{ aws_security_group_name }}"
      wait: true
      instance_tags:
        Application: "{{ application_name | default('bestsongs') }}"
        Environment: "{{ environment_name | default('Development') }}"
        Role: "{{ item }}"
      exact_count: "{{ instance_count }}"
      count_tag:
        Application: "{{ application_name | default('bestsongs') }}"
        Environment: "{{ environment_name | default('Development') }}"
        Role: "{{ item }}"
    with_items:
      - webserver
      - appserver
#      - dbserver
    register: ec2_instances

#  - name: Display output
#    debug:
#      var: ec2_instances

  - name: Store EC2 instance IPs to provision against
    add_host:
      hostname: "{{ item.tagged_instances[0].public_ip }}"
      groupname: ec2_instance_ips
    with_items: "{{ ec2_instances.results }}"

  - name: Wait for servers to come online
    wait_for:
      host: "{{ item.tagged_instances[0].public_ip }}"
      port: 22
      timeout: 600
    with_items: "{{ ec2_instances.results }}"

  # This pause is mandatory, otherwise the following tasks fail especially if creating a single ec2 instance!
  - name: pause for 30 seconds
    pause: seconds=30

- hosts: ec2_instance_ips
  gather_facts: false
  remote_user: ubuntu
  become: true
  tasks:
    - name: Install python-minimal
      raw: test -e /usr/bin/python || (sudo apt -y update && sudo apt install -y python-minimal)

#  - name: Display output
#    debug:
#      var: ec2_instances
